
# SPDX-License-Identifier: Apache-2.0
# Licensed to the Ed-Fi Alliance under one or more agreements.
# The Ed-Fi Alliance licenses this file to you under the Apache License, Version 2.0.
# See the LICENSE and NOTICES files in the project root for more information.

name: AdminApp E2E Test Environment

services:
  db-ods:
    image: edfialliance/ods-api-db-ods:${ODS_API_PACKAGE_VERSION:-v2.3.5}
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      TPDM_ENABLED: "${TPDM_ENABLED:-true}"
    volumes:
      - vol-db-ods:/var/lib/postgresql/data
    restart: always
    container_name: ed-fi-db-ods
    healthcheck:
      test: ["CMD-SHELL", "pg_isready  -U ${POSTGRES_USER}"]
      start_period: "60s"
      retries: 3

  db-admin:
    image: edfialliance/ods-api-db-admin:${ODS_API_PACKAGE_VERSION:-v2.3.5}
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      API_MODE: "SharedInstance"
    volumes:
      - vol-db-admin:/var/lib/postgresql/data
    restart: always
    container_name: ed-fi-db-admin
    healthcheck:
      test: ["CMD-SHELL", "pg_isready  -U ${POSTGRES_USER}"]
      start_period: "60s"
      retries: 3

  nginx:
    build:
      context: ../../../Docker/Settings/gateway
      dockerfile: Dockerfile
    environment:
      ADMINAPP_VIRTUAL_NAME: "${ADMINAPP_VIRTUAL_NAME:-adminapp}"
      ODS_VIRTUAL_NAME: "${ODS_VIRTUAL_NAME:-api}"
    ports:
      - "443:443"
      - "80:80"
    container_name: ed-fi-gateway
    restart: always
    hostname: nginx
    volumes:
      - ../../../eng/test-certs/ssl:/ssl/
    depends_on:
      - api
      - adminapp
    healthcheck:
      test: ${API_HEALTHCHECK_TEST}
      start_period: "60s"
      retries: 3

  api:
    image: edfialliance/ods-api-web-api:${ODS_API_PACKAGE_VERSION:-v2.3.5}
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_PORT: "${PGBOUNCER_LISTEN_PORT:-6432}"
      ODS_POSTGRES_HOST: pb-ods
      ADMIN_POSTGRES_HOST: pb-admin
      API_MODE: "SharedInstance"
      ApiSettings__PathBase: "${ODS_VIRTUAL_NAME:-api}"
      TPDM_ENABLED: "${TPDM_ENABLED:-true}"
      PATH_BASE: "${ODS_VIRTUAL_NAME:-api}"
      API_HEALTHCHECK_TEST: ${API_HEALTHCHECK_TEST?Please consult env.example to set the API healthcheck test}
      NPG_POOLING_ENABLED: ${NPG_POOLING_ENABLED:-true}
      NPG_API_MAX_POOL_SIZE_ODS: ${NPG_API_MAX_POOL_SIZE_ODS:-100}
      NPG_API_MAX_POOL_SIZE_ADMIN: ${NPG_API_MAX_POOL_SIZE_ADMIN:-100}
      NPG_API_MAX_POOL_SIZE_SECURITY: ${NPG_API_MAX_POOL_SIZE_SECURITY:-100}
      NPG_API_MAX_POOL_SIZE_MASTER: ${NPG_API_MAX_POOL_SIZE_MASTER:-100}
    volumes:
      - ${LOGS_FOLDER}:/app/logs
    depends_on:
      - pb-ods
      - pb-admin
    restart: always
    hostname: api
    container_name: ed-fi-ods-api
    healthcheck:
      test: ${API_HEALTHCHECK_TEST}
      start_period: "60s"
      retries: 3

  adminapp:
    build:
      context: ../../../Docker/
      additional_contexts:
        settings: ../../../Docker/
        parentdir: ../../../
      dockerfile: dev.pgsql.Dockerfile
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_PORT: "${PGBOUNCER_LISTEN_PORT:-6432}"
      ODS_POSTGRES_HOST: pb-ods
      ADMIN_POSTGRES_HOST: pb-admin
      API_MODE: "SharedInstance"
      API_EXTERNAL_URL: "https://${API_HOSTNAME:-localhost}/${ODS_VIRTUAL_NAME:-api}"
      ENCRYPTION_KEY: "${ENCRYPTION_KEY}"
      ADMINAPP_VIRTUAL_NAME: "${ADMINAPP_VIRTUAL_NAME:-adminapp}"
      API_INTERNAL_URL: ${API_INTERNAL_URL?Please consult env.example to set the Api internal url}
      ADMINAPP_HEALTHCHECK_TEST: ${ADMINAPP_HEALTHCHECK_TEST?Please consult env.example to set the Admin App healthcheck test}
      NPG_POOLING_ENABLED: "${NPG_POOLING_ENABLED:-true}"
      NPG_ADMIN_MAX_POOL_SIZE_ODS: "${NPG_ADMIN_MAX_POOL_SIZE_ODS:-100}"
      NPG_ADMIN_MAX_POOL_SIZE_ADMIN: "${NPG_ADMIN_MAX_POOL_SIZE_ADMIN:-100}"
      NPG_ADMIN_MAX_POOL_SIZE_SECURITY: "${NPG_ADMIN_MAX_POOL_SIZE_SECURITY:-100}"
    volumes:
      - ${LOGS_FOLDER}:/app/logs
    depends_on:
      - pb-ods
      - pb-admin
      - api
    restart: always
    hostname: adminapp
    container_name: ed-fi-ods-adminapp
    healthcheck:
      test: ${ADMINAPP_HEALTHCHECK_TEST}
      start_period: "60s"
      retries: 3

  pb-admin:
    image: bitnami/pgbouncer
    environment:
      PGBOUNCER_DATABASE: "*"
      PGBOUNCER_PORT: "${PGBOUNCER_LISTEN_PORT:-6432}"
      POSTGRESQL_USER: "${POSTGRES_USER}"
      POSTGRESQL_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRESQL_HOST: db-admin
      PGBOUNCER_SET_DATABASE_USER: "yes"
      PGBOUNCER_SET_DATABASE_PASSWORD: "yes"
      PGBOUNCER_IGNORE_STARTUP_PARAMETERS: extra_float_digits
    ports:
      - "5401:${PGBOUNCER_LISTEN_PORT:-6432}"
    restart: always
    container_name: ed-fi-pb-admin
    depends_on:
      - db-admin

  pb-ods:
    image: bitnami/pgbouncer
    environment:
      PGBOUNCER_DATABASE: "*"
      PGBOUNCER_PORT: "${PGBOUNCER_LISTEN_PORT:-6432}"
      POSTGRESQL_USER: "${POSTGRES_USER}"
      POSTGRESQL_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRESQL_HOST: db-ods
      PGBOUNCER_SET_DATABASE_USER: "yes"
      PGBOUNCER_SET_DATABASE_PASSWORD: "yes"
      PGBOUNCER_IGNORE_STARTUP_PARAMETERS: extra_float_digits
    ports:
      - "5402:${PGBOUNCER_LISTEN_PORT:-6432}"
    restart: always
    container_name: ed-fi-pb-ods
    depends_on:
      - db-ods

volumes:
  vol-db-admin:
    driver: local
    name: vol-db-admin
  vol-db-ods:
    driver: local
    name: vol-db-ods
