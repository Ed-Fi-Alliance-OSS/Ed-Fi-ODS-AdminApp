@*
    SPDX-License-Identifier: Apache-2.0
    Licensed to the Ed-Fi Alliance under one or more agreements.
    The Ed-Fi Alliance licenses this file to you under the Apache License, Version 2.0.
    See the LICENSE and NOTICES files in the project root for more information.
*@

@using EdFi.Ods.AdminApp.Management.Instances
@using EdFi.Ods.AdminApp.Web.Helpers
@using EdFi.Ods.AdminApp.Web.Infrastructure
@using EdFi.Ods.AdminApp.Web.Models.ViewModels
@model EdFi.Ods.AdminApp.Web.Models.ViewModels.EducationOrganizations.AddPostSecondaryInstitutionModel

<div id ="add-psi-modal" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="addPSIModal">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title">Add Post-Secondary Institution</h4>
            </div>
        @if (Model.RequiredApiDataExist)
        {
            <div class="modal-body center-block text-center">
                @using (Html.BeginForm("AddPostSecondaryInstitution", "EducationOrganizations", FormMethod.Post, new { id = "addPostSecondaryFormModal" }))
                {
                    @Html.ValidationBlock()
                    @Html.InputBlock(m => m.PostSecondaryInstitutionId)
                    @Html.SelectListBlock(m => m.PostSecondaryInstitutionLevel, Model.PostSecondaryInstitutionLevelOptions,
                        x => new SelectListItemWithDescription {
                            Text = x.ShortDescription,
                            Value = x.Value,
                            Description = x.DisplayText
                        })
                    @Html.SelectListBlock(m => m.AdministrativeFundingControl, Model.AdministrativeFundingControlOptions, x => new SelectListItem {Text = x.DisplayText, Value = x.Value})
                    @Html.InputBlock(m => m.Name, inputModifier: x => x.Attr("maxlength", "75"))
                    @Html.InputBlock(m => m.StreetNumberName, inputModifier: x => x.Attr("maxlength", "150"))
                    @Html.InputBlock(m => m.ApartmentRoomSuiteNumber, inputModifier: x => x.Attr("maxlength", "50"))
                    @Html.InputBlock(m => m.City, inputModifier: x => x.Attr("maxlength", "30"))
                    @Html.SelectListBlock(m => m.State, Model.StateOptions, x => new SelectListItem {Text = x.DisplayText, Value = x.Value})
                    @Html.InputBlock(m => m.ZipCode, inputModifier: x => x.Attr("maxlength", "17"))
                }
            </div>
            <div class="modal-footer">
                @Html.CancelModalButton()
                @Html.SaveButton("Add").AppendSpinner("add-psi-spinner")
            </div>
        }
        else
        {
            @await Html.PartialAsync("_MissingData")
        }
        </div>
    </div>
</div>

<script type="text/javascript">
    $(function() {
        $("#add-psi-modal").on("show.bs.modal", function () {
            $("#addPostSecondaryFormModal").get(0).reset();
            $(".form-group").removeClass("has-error");
            $(".validationSummary").addClass("hidden");
        });
    });
</script>
