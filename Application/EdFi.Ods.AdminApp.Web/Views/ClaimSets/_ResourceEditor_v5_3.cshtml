@*
SPDX-License-Identifier: Apache-2.0
Licensed to the Ed-Fi Alliance under one or more agreements.
The Ed-Fi Alliance licenses this file to you under the Apache License, Version 2.0.
See the LICENSE and NOTICES files in the project root for more information.
*@

@using Newtonsoft.Json;
@using EdFi.Ods.AdminApp.Web.Helpers
@using Newtonsoft.Json.Serialization
@model EdFi.Ods.AdminApp.Web.Models.ViewModels.ClaimSets.ClaimSetResourcesModel

<h3>Resources</h3>
<div class="row padding-15">
    @if (Model.ResourceClaims.Any())
    {
        <table class="table">
            <thead>
                <tr>
                    <th scope="col"></th>
                    <th scope="col">Resource</th>
                    <th scope="col">Read</th>
                    <th scope="col">Create</th>
                    <th scope="col">Update</th>
                    <th scope="col">Delete</th>
                    <th scope="col"></th>
                    <th scope="col"></th>
                    <th scope="col"></th>
                </tr>
            </thead>
            <tbody id="resource-claim-table-body">
                @foreach (var resourceClaim in Model.ResourceClaims)
                {
                    <tr class="parent-resource-claim">
                        <td class="icon-cell">
                            @if (resourceClaim.Children.Any() || resourceClaim.IsParent)
                            {<a class="claims-toggle" data-resource-id='@resourceClaim.Id'><span class="fa fa-chevron-down caret-custom"></span></a>}
                        </td>
                        <td data-resource-id='@resourceClaim.Id' class="resource-label">@resourceClaim.Name</td>
                        <td class="read-action-cell">
                            @Html.CheckBoxSquare(resourceClaim.Read, "read")
                        </td>
                        <td class="create-action-cell">
                            @Html.CheckBoxSquare(resourceClaim.Create, "create")
                        </td>
                        <td class="update-action-cell">
                            @Html.CheckBoxSquare(resourceClaim.Update, "update")
                        </td>
                        <td class="delete-action-cell">
                            @Html.CheckBoxSquare(resourceClaim.Delete, "delete")
                        </td>
                        <td class="edit-resource-button">
                            <a class="edit-resource"> <span class="fa fa-pencil action-icons"></span></a>
                        </td>
                        <td>
                            <a class="loads-ajax-modal edit-auth-strategy" data-url="@Url.Action("AuthStrategyModal","ClaimSets", new {claimSetId = Model.ClaimSetId, resourceClaimId = resourceClaim.Id})"> <span class="fa fa-info-circle action-icons"></span></a>
                        </td>
                        <td>
                            <a class="loads-ajax-modal delete-resource-claim" data-url="@Url.Action("DeleteResourceOnClaimSetModal","ClaimSets", new {claimSetId = Model.ClaimSetId, resourceClaimId = resourceClaim.Id, claimSetName = Model.ClaimSetName, resourceName = resourceClaim.Name})"> <span class="fa fa-trash-o action-icons"></span></a>
                        </td>
                    </tr>

                    foreach (var childResourceClaim in resourceClaim.Children)
                    {
                        <tr class="child-resource-claim" style="display: none">
                            <td class="icon-cell">
                                <span class="child-resource-branch"></span>
                            </td>
                            <td data-resource-id='@childResourceClaim.Id' data-parent-id='@resourceClaim.Id' class="resource-label">@childResourceClaim.Name</td>
                            <td class="read-action-cell">
                                @Html.CheckBoxSquare(childResourceClaim.Read, "read")
                            </td>
                            <td class="create-action-cell">
                                @Html.CheckBoxSquare(childResourceClaim.Create, "create")
                            </td>
                            <td class="update-action-cell">
                                @Html.CheckBoxSquare(childResourceClaim.Update, "update")
                            </td>
                            <td class="delete-action-cell">
                                @Html.CheckBoxSquare(childResourceClaim.Delete, "delete")
                            </td>
                            <td class="edit-resource-button">
                                <a class="edit-resource"> <span class="fa fa-pencil action-icons"></span></a>
                            </td>
                            <td>
                                <a class="loads-ajax-modal edit-auth-strategy" data-url="@Url.Action("AuthStrategyModal","ClaimSets", new {claimSetId = Model.ClaimSetId, resourceClaimId = childResourceClaim.Id})"> <span class="fa fa-info-circle action-icons"></span></a>
                            </td>
                            <td>
                                <a class="loads-ajax-modal delete-resource-claim" data-url="@Url.Action("DeleteResourceOnClaimSetModal","ClaimSets", new {claimSetId = Model.ClaimSetId, resourceClaimId = childResourceClaim.Id, claimSetName = Model.ClaimSetName, resourceName = childResourceClaim.Name})"> <span class="fa fa-trash-o action-icons"></span></a>
                            </td>
                        </tr>
                    }
                    <tr class="child-resource-claim" data-parent-id='@resourceClaim.Id' id="child-dropdown-row-@resourceClaim.Id" style="display: none">
                        <td class="icon-cell">
                        </td>
                        <td class="child-dropdown">
                            @Html.DropDownList("ChildResourceClaimsDropDown", new SelectList(Enumerable.Empty<SelectListItem>()), new {@id= $"child-resource-dropdown-{resourceClaim.Id}"})
                        </td>
                        <td colspan="7">
                            @Html.Button("Add Child Resource").Attr("type", "button").AddClass("add-child-resource-button").Attr("data-parent-id", $"{@resourceClaim.Id}")
                        </td>
                    </tr>
                }
            </tbody>
        </table>

    }
    else
    {
        <table class="table">
            <thead>
                <tr>
                    <th scope="col"></th>
                    <th scope="col">Resource</th>
                    <th scope="col">Read</th>
                    <th scope="col">Create</th>
                    <th scope="col">Update</th>
                    <th scope="col">Delete</th>
                    <th scope="col"></th>
                    <th scope="col"></th>
                    <th scope="col"></th>
                </tr>
            </thead>
            <tbody id="resource-claim-table-body"></tbody>
        </table>
    }
    <div class="col-md-8">
        @Html.DropDownList("ResourceClaimsDropDown", Model.AllResourceClaims, new { @class = "resource-claim-dropdown" })
    </div>
    <div class="col-md-4">
        @Html.Button("Add Resource").Attr("type", "button").Id("add-resource-button").Attr("disabled", true)
    </div>
</div>

<script type="text/javascript">
    var editResourceUrl = '@Url.Action("EditResourceOnClaimSet", "ClaimSets")';
    var claimSetsUrl = '@Url.Action("ClaimSets", "GlobalSettings")';
    var deleteResourceUrl = '@Url.Action("DeleteResourceOnClaimSet", "ClaimSets")';
    var deleteResourceModalUrl = '@Url.Action("DeleteResourceOnClaimSetModal", "ClaimSets")';
    var overrideAuthStrategyModalUrl = '@Url.Action("AuthStrategyModal", "ClaimSets")';
    var claimSetInfo = @Html.Raw(JsonConvert.SerializeObject(new { claimSetId = Model.ClaimSetId, claimSetName = Model.ClaimSetName}, new JsonSerializerSettings
                  {
                      StringEscapeHandling = StringEscapeHandling.EscapeHtml
                  }));
    var existingResources = @Html.Raw(JsonConvert.SerializeObject(Model.ResourceClaims, new JsonSerializerSettings
                       {
                           StringEscapeHandling = StringEscapeHandling.EscapeHtml
                       }));
    var childResourcesForParentUrl = '@Url.Action("GetSelectListForChildResourceClaims", "ClaimSets")';
    InitializeModalLoaders();

    $("#ResourceClaimsDropDown").change(function () {
        $('#add-resource-button').prop("disabled", false);
    });
    $("#add-resource-button").click(function () {
        $('#add-resource-button').prop("disabled", true);
    });
</script>
<script type="text/javascript" src="~/bundles/claimset.min.js" asp-append-version="true"></script>
