
# SPDX-License-Identifier: Apache-2.0
# Licensed to the Ed-Fi Alliance under one or more agreements.
# The Ed-Fi Alliance licenses this file to you under the Apache License, Version 2.0.
# See the LICENSE and NOTICES files in the project root for more information.

version: "3.8"

services:
  db-ods:
    image: edfialliance/ods-api-db-ods:${TAG}
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      TPDM_ENABLED: "${TPDM_ENABLED:-true}"
    volumes:
      - vol-db-ods:/var/lib/postgresql/data
    restart: always
    container_name: ed-fi-db-ods

  db-admin:
    image: edfialliance/ods-api-db-admin:latest
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      API_MODE: ${API_MODE}
    ports:
      - "5880:5432"
    volumes:
      - vol-db-admin:/var/lib/postgresql/data
    restart: always
    container_name: ed-fi-db-admin
    healthcheck:
      test: ["CMD-SHELL", "pg_isready  -U ${POSTGRES_USER}"]
      start_period: "60s"
      retries: 3

  nginx:
    image: edfialliance/ods-api-web-gateway:${TAG}
    environment:
      ADMINAPP_VIRTUAL_NAME: "${ADMINAPP_VIRTUAL_NAME:-adminapp}"
      ODS_VIRTUAL_NAME: "${ODS_VIRTUAL_NAME:-api}"
    ports:
      - "443:443"
      - "80:80"
    container_name: ed-fi-gateway
    restart: always
    hostname: nginx
    volumes:
      - ../../Docker/ssl:/ssl/
    depends_on:
      - api
      - adminapp

  api:
    image: edfialliance/ods-api-web-api:${TAG}
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_PORT: "${PGBOUNCER_LISTEN_PORT:-6432}"
      ODS_POSTGRES_HOST: pb-ods
      ADMIN_POSTGRES_HOST: pb-admin
      API_MODE: "SharedInstance"
      ApiSettings__PathBase: "${ODS_VIRTUAL_NAME:-api}"
      TPDM_ENABLED: "${TPDM_ENABLED:-true}"
    volumes:
      - ${LOGS_FOLDER}:/app/logs
    depends_on:
      - pb-ods
      - pb-admin
    restart: always
    hostname: api
    container_name: ed-fi-ods-api
  
  adminapp:
    build:
      context: ../../../../
      dockerfile: Application/EdFi.Ods.AdminApp.Web/dev.Dockerfile
    image: adminapp
    environment:
      ADMIN_POSTGRES_HOST: pb-admin
      POSTGRES_PORT: "${PGBOUNCER_LISTEN_PORT:-6432}"
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      API_MODE: ${API_MODE}
      AUTHORITY: ${AUTHORITY}
      ISSUER_URL: ${ISSUER_URL}
      SIGNING_KEY: ${SIGNING_KEY}
      ENCRYPTION_KEY: ${ENCRYPTION_KEY}
      ADMINAPP_VIRTUAL_NAME: ${ADMINAPP_VIRTUAL_NAME:-adminapp} 
      API_INTERNAL_URL: ${API_INTERNAL_URL}
    volumes:
      - ${LOGS_FOLDER}:/app/logs
      - adminapp-bulk-hashcache:/app/BulkUploadHashCache
      - ../../Docker/ssl:/ssl/
    depends_on:
      - pb-admin
    restart: always
    hostname: ${ADMINAPP_VIRTUAL_NAME:-adminapp} 
    container_name: ed-fi-ods-adminapp
    healthcheck:
      test: $$ADMIN_APP_HEALTHCHECK_TEST
      start_period: "60s"
      retries: 3

  pb-admin:
    image: pgbouncer/pgbouncer
    environment:
      DATABASES: "* = host = db-admin port=5432 user=${POSTGRES_USER} password=${POSTGRES_PASSWORD}"
      PGBOUNCER_LISTEN_PORT: "${PGBOUNCER_LISTEN_PORT:-6432}"
    ports:
      - "5401:${PGBOUNCER_LISTEN_PORT:-6432}"
    restart: always
    container_name: ed-fi-pb-admin
    depends_on:
      - db-admin

  pb-ods:
    image: pgbouncer/pgbouncer
    environment:
      DATABASES: "* = host = db-ods port=5432 user=${POSTGRES_USER} password=${POSTGRES_PASSWORD}"
      PGBOUNCER_LISTEN_PORT: "${PGBOUNCER_LISTEN_PORT:-6432}"
    ports:
      - "5402:${PGBOUNCER_LISTEN_PORT:-6432}"
    restart: always
    container_name: ed-fi-pb-ods
    depends_on:
      - db-ods

volumes:
  vol-db-admin:
    driver: local
    name: vol-db-admin
  vol-db-ods:
    driver: local
    name: vol-db-ods
  adminapp-bulk-hashcache:
    driver: local
    name: vol-adminapp-bulk-hashcache
