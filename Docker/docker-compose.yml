# SPDX-License-Identifier: Apache-2.0
# Licensed to the Ed-Fi Alliance under one or more agreements.
# The Ed-Fi Alliance licenses this file to you under the Apache License, Version 2.0.
# See the LICENSE and NOTICES files in the project root for more information.

name: AdminApp Dev Test Environment

services:
  db-ods:
    image: edfialliance/ods-api-db-ods:${ODS_API_PACKAGE_VERSION:-v2.3.5}
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      TPDM_ENABLED: "${TPDM_ENABLED:-true}"
    volumes:
      - vol-db-ods:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready  -U ${POSTGRES_USER}"]
      start_period: "60s"
      retries: 3

  db-admin:
    image: edfialliance/ods-api-db-admin:${ODS_API_PACKAGE_VERSION:-v2.3.5}
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      API_MODE: ${API_MODE}
    volumes:
      - vol-db-admin:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready  -U ${POSTGRES_USER}"]
      start_period: "60s"
      retries: 3
    ports:
      - "${POSTGRES_EXPOSED_PORT:-6432}:5432"

  nginx:
    build:
      context: ./Settings/gateway/
      dockerfile: Dockerfile
    environment:
      ADMINAPP_VIRTUAL_NAME: "${ADMIN_APP_VIRTUAL_NAME:-adminapp}"
      ODS_VIRTUAL_NAME: "${ODS_VIRTUAL_NAME:-api}"
    ports:
      - "443:443"
      - "80:80"
    restart: always
    volumes:
      - ./Settings/ssl:/ssl/
    depends_on:
      - adminapp
      - api

  api:
    image: edfialliance/ods-api-web-api:${ODS_API_PACKAGE_VERSION:-v2.3.5}
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_PORT: 5432
      ODS_POSTGRES_HOST: db-ods
      ADMIN_POSTGRES_HOST: db-admin
      API_MODE: ${API_MODE:-SharedInstance}
      ApiSettings__PathBase: ${ODS_VIRTUAL_NAME:-api}
      TPDM_ENABLED: ${TPDM_ENABLED:-true}
      API_HEALTHCHECK_TEST: ${API_HEALTHCHECK_TEST?Please consult env.example to set the API healthcheck test}
      NPG_POOLING_ENABLED: ${NPG_POOLING_ENABLED:-true}
      NPG_API_MAX_POOL_SIZE_ODS: ${NPG_API_MAX_POOL_SIZE_ODS:-100}
      NPG_API_MAX_POOL_SIZE_ADMIN: ${NPG_API_MAX_POOL_SIZE_ADMIN:-100}
      NPG_API_MAX_POOL_SIZE_SECURITY: ${NPG_API_MAX_POOL_SIZE_SECURITY:-100}
      NPG_API_MAX_POOL_SIZE_MASTER: ${NPG_API_MAX_POOL_SIZE_MASTER:-100}
    volumes:
      - ${LOGS_FOLDER}:/app/logs
    depends_on:
      - db-ods
      - db-admin
    restart: always
    healthcheck:
      test: ${API_HEALTHCHECK_TEST}
      start_period: "60s"
      retries: 3

  adminapp:
    build:
      context: .
      dockerfile: pgsql.Dockerfile
      args:
        ADMINAPP_PACKAGE_VERSION: ${ADMINAPP_PACKAGE_VERSION:-3.3.2}
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_PORT: 5432
      ODS_POSTGRES_HOST: db-ods
      ADMIN_POSTGRES_HOST: db-admin
      API_MODE: "SharedInstance"
      API_EXTERNAL_URL: "https://${API_HOSTNAME:-localhost}/${ODS_VIRTUAL_NAME:-api}"
      ENCRYPTION_KEY: "${ENCRYPTION_KEY}"
      ADMINAPP_VIRTUAL_NAME: "${ADMINAPP_VIRTUAL_NAME:-adminapp}"
      API_INTERNAL_URL: ${API_INTERNAL_URL?Please consult env.example to set the Api internal url}
      ADMINAPP_HEALTHCHECK_TEST: ${ADMINAPP_HEALTHCHECK_TEST?Please consult env.example to set the Admin App healthcheck test}
      NPG_POOLING_ENABLED: "${NPG_POOLING_ENABLED:-true}"
      NPG_ADMIN_MAX_POOL_SIZE_ODS: "${NPG_ADMIN_MAX_POOL_SIZE_ODS:-100}"
      NPG_ADMIN_MAX_POOL_SIZE_ADMIN: "${NPG_ADMIN_MAX_POOL_SIZE_ADMIN:-100}"
      NPG_ADMIN_MAX_POOL_SIZE_SECURITY: "${NPG_ADMIN_MAX_POOL_SIZE_SECURITY:-100}"
    volumes:
      - ${LOGS_FOLDER}:/app/logs
      - ./Settings/ssl:/ssl/
    depends_on:
      - db-ods
      - db-admin
      - api
    restart: always
    healthcheck:
      test: ${ADMINAPP_HEALTHCHECK_TEST}
      start_period: "60s"
      retries: 3

volumes:
  vol-db-admin:
    driver: local
    name: vol-db-admin
  vol-db-ods:
    driver: local
    name: vol-db-ods
