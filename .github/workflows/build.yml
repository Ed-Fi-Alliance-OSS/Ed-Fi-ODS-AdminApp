# SPDX-License-Identifier: Apache-2.0
# Licensed to the Ed-Fi Alliance under one or more agreements.
# The Ed-Fi Alliance licenses this file to you under the Apache License, Version 2.0.
# See the LICENSE and NOTICES files in the project root for more information.

name: Build, Test and Pack

on:
  push:
    branches: [ main ]
  pull_request:
  workflow_dispatch:

env:
  BUILD_VERSION: ${{ secrets.SEMANTIC_VERSION }}
  GA_MEASUREMENT_ID: ${{ secrets.GOOGLE_ANALYTICS_MEASUREMENT_ID}}
  ARTIFACTS_API_KEY: ${{ secrets.AZURE_ARTIFACTS_PAT }}
  ARTIFACTS_FEED_URL: ${{ secrets.AZURE_ARTIFACTS_FEED_URL }}

jobs:
  build-test-pack:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # v3.0.2
    - name: Setup .NET
      uses: actions/setup-dotnet@9211491ffb35dd6a6657ca4f45d43dfe6e97c829 # v2.0.0
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: dotnet restore
      working-directory: ./Application
    - name: Build
      run: ./build.ps1 -Command Build -Configuration Release -Version ${{ env.BUILD_VERSION }} -BuildCounter ${{ github.run_number }}
      shell: pwsh
    - name: Populate Google Analytics ID
      run: .\build.ps1 -Command PopulateGoogleAnalyticsAppSettings -GoogleAnalyticsMeasurementId ${{env.GA_MEASUREMENT_ID}}
      shell: pwsh
    - name: Unit Tests
      if: success()
      run: ./build.ps1 -Command UnitTest -Configuration Release
      shell: pwsh
    - name: Pack
      if: success()
      run: ./build.ps1 -Command PackageApi -Configuration Release -Version ${{ env.BUILD_VERSION }} -BuildCounter ${{ github.run_number }}
      shell: pwsh
    - name: Upload Package
      if: success()
      uses: actions/upload-artifact@6673cd052c4cd6fcf4b4e6e60ea986c889389535 # v3.0.0
      with:
        name: NuGetPackages
        path: ./*.nupkg

  publish-artifacts:
    needs: build-test-pack

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # v3.0.2
      - name: Get Artifact
        uses: actions/download-artifact@fb598a63ae348fa914e94cd0ff38f362e927b741 #v3.0.0
        with:
          name: NuGetPackages
      - name: Upload Admin API
        run: |
          $artifact = (Get-ChildItem -Path $_ -Name -Include *.Admin.Api.*.nupkg)
          $arguments = @{
            EdFiNuGetFeed = "${{ env.ARTIFACTS_FEED_URL }}"
            NuGetApiKey = "${{ env.ARTIFACTS_API_KEY }}"
          }
          $arguments.PackageFile = $artifact
          ./build.ps1 Push @arguments
        shell: pwsh
